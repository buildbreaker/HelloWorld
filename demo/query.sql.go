// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package demo

import (
	"context"
)

const getSomeDeletedOk = `-- name: GetSomeDeletedOk :many
DELETE FROM a
    USING b
WHERE a.b_id_fk = b.b_id
    RETURNING a_id, b_id_fk
`

func (q *Queries) GetSomeDeletedOk(ctx context.Context) ([]A, error) {
	rows, err := q.db.QueryContext(ctx, getSomeDeletedOk)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []A
	for rows.Next() {
		var i A
		if err := rows.Scan(&i.AID, &i.BIDFk); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
