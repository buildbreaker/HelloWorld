// Code generated by Wire protocol buffer compiler, do not edit.
// Source: proto3.simple.EnumMsg in simple.proto
import Foundation
import Wire

public struct EnumMsg {

    public var enumeration: Enum?
    public var unknownFields: Data = .init()

    public init(enumeration: Enum? = nil) {
        self.enumeration = enumeration
    }

}

#if !WIRE_REMOVE_EQUATABLE
extension EnumMsg : Equatable {
}
#endif

#if !WIRE_REMOVE_HASHABLE
extension EnumMsg : Hashable {
}
#endif

extension EnumMsg : Proto3Codable {
    public init(from reader: ProtoReader) throws {
        var enumeration: Enum? = nil

        let token = try reader.beginMessage()
        while let tag = try reader.nextTag(token: token) {
            switch tag {
            case 1: enumeration = try reader.decode(Enum.self)
            default: try reader.readUnknownField(tag: tag)
            }
        }
        self.unknownFields = try reader.endMessage(token: token)

        self.enumeration = enumeration
    }

    public func encode(to writer: ProtoWriter) throws {
        try writer.encode(tag: 1, value: self.enumeration)
        try writer.writeUnknownFields(unknownFields)
    }
}

#if !WIRE_REMOVE_CODABLE
extension EnumMsg : Codable {
    public enum CodingKeys : String, CodingKey {

        case enumeration

    }
}
#endif
