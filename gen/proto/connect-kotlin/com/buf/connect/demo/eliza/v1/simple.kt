// Code generated by protoc-gen-connect-kotlin. DO NOT EDIT.
//
// Source: simple.proto

package com.buf.connect.demo.eliza.v1

import buf.connect.kotlin.BidirectionalStreamInterface
import buf.connect.kotlin.ServerOnlyStreamInterface
import buf.connect.kotlin.ClientOnlyStreamInterface
import buf.connect.kotlin.Headers
import buf.connect.kotlin.ProtocolClientInterface
import buf.connect.kotlin.ResponseMessage
import buf.connect.kotlin.StreamResult

class HelloClient(
	private val client: ProtocolClientInterface
) {
	fun hello(request: com.buf.connect.demo.eliza.v1.HelloRequest, headers: Headers = emptyMap()): ResponseMessage<com.buf.connect.demo.eliza.v1.HelloResponse> {
		return client.unary(
				"buf.connect.demo.eliza.v1.Hello/Hello", 
				request, 
				headers, 
				com.buf.connect.demo.eliza.v1.HelloRequest.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloRequest::class.java, 
				com.buf.connect.demo.eliza.v1.HelloResponse.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloResponse::class.java,
		)
	}
	fun helloStreamResponse(headers: Headers = emptyMap(), onResult: (StreamResult<com.buf.connect.demo.eliza.v1.HelloResponse>) -> Unit): ServerOnlyStreamInterface<com.buf.connect.demo.eliza.v1.HelloRequest, com.buf.connect.demo.eliza.v1.HelloResponse> {
		return client.stream(
				"buf.connect.demo.eliza.v1.Hello/HelloStreamResponse", 
				headers, 
				com.buf.connect.demo.eliza.v1.HelloRequest.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloRequest::class.java, 
				com.buf.connect.demo.eliza.v1.HelloResponse.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloResponse::class.java,
				onResult,
		)
		.toServerStream()
	}
	fun helloStreamRequest(headers: Headers = emptyMap(), onResult: (StreamResult<com.buf.connect.demo.eliza.v1.HelloResponse>) -> Unit): ClientOnlyStreamInterface<com.buf.connect.demo.eliza.v1.HelloRequest, com.buf.connect.demo.eliza.v1.HelloResponse> {
		return client.stream(
				"buf.connect.demo.eliza.v1.Hello/HelloStreamRequest", 
				headers, 
				com.buf.connect.demo.eliza.v1.HelloRequest.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloRequest::class.java, 
				com.buf.connect.demo.eliza.v1.HelloResponse.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloResponse::class.java,
				onResult,
		)
		.toClientStream()
	}
	fun helloBiDiStream(headers: Headers = emptyMap(), onResult: (StreamResult<com.buf.connect.demo.eliza.v1.HelloResponse>) -> Unit): BidirectionalStreamInterface<com.buf.connect.demo.eliza.v1.HelloRequest, com.buf.connect.demo.eliza.v1.HelloResponse> {
		return client.stream(
				"buf.connect.demo.eliza.v1.Hello/HelloBiDiStream", 
				headers, 
				com.buf.connect.demo.eliza.v1.HelloRequest.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloRequest::class.java, 
				com.buf.connect.demo.eliza.v1.HelloResponse.ADAPTER, 
				com.buf.connect.demo.eliza.v1.HelloResponse::class.java,
				onResult,
		)
	}
}
